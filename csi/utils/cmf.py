import numpy as np
from PIL import ImageCms, Image 
from scipy.interpolate import interp1d
from colormath.color_objects import sRGBColor, XYZColor
from colormath.color_conversions import convert_color

class ColorMatchFunc:
    def __init__(self):
        lams = [360.0, 365.0, 370.0, 375.0, 380.0, 385.0, 390.0, 395.0, 400.0, 405.0, 410.0, 415.0, 420.0, 425.0, 430.0, 435.0, 440.0, 445.0, 450.0, 455.0, 460.0, 465.0, 470.0, 475.0, 480.0, 485.0, 490.0, 495.0, 500.0, 505.0, 510.0, 515.0, 520.0, 525.0, 530.0, 535.0, 540.0, 545.0, 550.0, 555.0, 560.0, 565.0, 570.0, 575.0, 580.0, 585.0, 590.0, 595.0, 600.0, 605.0, 610.0, 615.0, 620.0, 625.0, 630.0, 635.0, 640.0, 645.0, 650.0, 655.0, 660.0, 665.0, 670.0, 675.0, 680.0, 685.0, 690.0, 695.0, 700.0, 705.0, 710.0, 715.0, 720.0, 725.0, 730.0, 735.0, 740.0, 745.0, 750.0, 755.0, 760.0, 765.0, 770.0, 775.0, 780.0, 785.0, 790.0, 795.0, 800.0, 805.0, 810.0, 815.0, 820.0, 825.0, 830.0]
        Xs = [1.222e-07, 9.1927e-07, 5.9586e-06, 3.3266e-05, 0.000159952, 0.00066244, 0.0023616, 0.0072423, 0.0191097, 0.0434, 0.084736, 0.140638, 0.204492, 0.264737, 0.314679, 0.357719, 0.383734, 0.386726, 0.370702, 0.342957, 0.302273, 0.254085, 0.195618, 0.132349, 0.080507, 0.041072, 0.016172, 0.005132, 0.003816, 0.015444, 0.037465, 0.071358, 0.117749, 0.172953, 0.236491, 0.304213, 0.376772, 0.451584, 0.529826, 0.616053, 0.705224, 0.793832, 0.878655, 0.951162, 1.01416, 1.0743, 1.11852, 1.1343, 1.12399, 1.0891, 1.03048, 0.95074, 0.856297, 0.75493, 0.647467, 0.53511, 0.431567, 0.34369, 0.268329, 0.2043, 0.152568, 0.11221, 0.0812606, 0.05793, 0.0408508, 0.028623, 0.0199413, 0.013842, 0.00957688, 0.0066052, 0.00455263, 0.0031447, 0.00217496, 0.0015057, 0.00104476, 0.00072745, 0.000508258, 0.00035638, 0.000250969, 0.00017773, 0.00012639, 9.0151e-05, 6.45258e-05, 4.6339e-05, 3.34117e-05, 2.4209e-05, 1.76115e-05, 1.2855e-05, 9.41363e-06, 6.913e-06, 5.09347e-06, 3.7671e-06, 2.79531e-06, 2.082e-06, 1.55314e-06]
        Ys = [1.3398e-08, 1.0065e-07, 6.511e-07, 3.625e-06, 1.7364e-05, 7.156e-05, 0.0002534, 0.0007685, 0.0020044, 0.004509, 0.008756, 0.014456, 0.021391, 0.029497, 0.038676, 0.049602, 0.062077, 0.074704, 0.089456, 0.106256, 0.128201, 0.152761, 0.18519, 0.21994, 0.253589, 0.297665, 0.339133, 0.395379, 0.460777, 0.53136, 0.606741, 0.68566, 0.761757, 0.82333, 0.875211, 0.92381, 0.961988, 0.9822, 0.991761, 0.99911, 0.99734, 0.98238, 0.955552, 0.915175, 0.868934, 0.825623, 0.777405, 0.720353, 0.658341, 0.593878, 0.527963, 0.461834, 0.398057, 0.339554, 0.283493, 0.228254, 0.179828, 0.140211, 0.107633, 0.081187, 0.060281, 0.044096, 0.0318004, 0.0226017, 0.0159051, 0.0111303, 0.0077488, 0.0053751, 0.00371774, 0.00256456, 0.00176847, 0.00122239, 0.00084619, 0.00058644, 0.00040741, 0.000284041, 0.00019873, 0.00013955, 9.8428e-05, 6.9819e-05, 4.9737e-05, 3.55405e-05, 2.5486e-05, 1.83384e-05, 1.3249e-05, 9.6196e-06, 7.0128e-06, 5.1298e-06, 3.76473e-06, 2.77081e-06, 2.04613e-06, 1.51677e-06, 1.12809e-06, 8.4216e-07, 6.297e-07]
        Zs = [5.35027e-07, 4.0283e-06, 2.61437e-05, 0.00014622, 0.000704776, 0.0029278, 0.0104822, 0.032344, 0.0860109, 0.19712, 0.389366, 0.65676, 0.972542, 1.2825, 1.55348, 1.7985, 1.96728, 2.0273, 1.9948, 1.9007, 1.74537, 1.5549, 1.31756, 1.0302, 0.772125, 0.57006, 0.415254, 0.302356, 0.218502, 0.159249, 0.112044, 0.082248, 0.060709, 0.04305, 0.030451, 0.020584, 0.013676, 0.007918, 0.003988, 0.001091, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        self.f = interp1d(lams, np.column_stack((Xs, Ys, Zs)), kind='linear', fill_value=(0,0,0), bounds_error=False, axis=0)

    def spec2srgb(self, lam):
        XYZ = self.f(lam)
        xyz = XYZColor(*XYZ)
        sRGB = convert_color(xyz, sRGBColor).get_value_tuple()
        return sRGB
    
    def __call__(self, lam):
        srgb = self.spec2srgb(lam)
        srgb = np.kron(np.ones((3, 1)), srgb)
        gray = np.arange(0., 1., 1/256.)[:, None].repeat(3, axis=1)
        cmM = np.dot(gray, srgb)
        cmM = cmM / np.max(cmM)

        return cmM
